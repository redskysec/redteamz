apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ env }}-nginx-conf
  namespace: {{application_name}}-{{ env }}
data:
  nginx.conf: |
{% for s3settings in s3domains %}
    server {
      listen 8880;
      listen 8443 ssl http2;
      server_name {% for domain in s3settings.domains %}{{domain  }} {% endfor %};
      
      ssl_certificate /etc/nginx/ssl/{{s3settings.certname}}.crt;
      ssl_certificate_key /etc/nginx/ssl/{{s3settings.certname}}.key;

      keepalive_timeout   70;

      #error_log /var/log/nginx/level0_b.nginx_error.log warn;
      #access_log /var/log/nginx/level0_b.nginx_access.log main;
      error_log stderr;

      location /admin/ {
          return 302 https://google.com;
      }
      location /django-admin/{
          return 302 https://google.com;
      }
      location /wp-admin/{
          return 302 https://google.com;
      }
      location /cgi/{
          return 302 https://google.com;
      }

      ssl_protocols       TLSv1.1 TLSv1.2 TLSv1.3;
      # Use the server's cipher list instead of the client's.
      ssl_prefer_server_ciphers on;

      ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

      ssl_dhparam /etc/ssl/dhparam.pem;


    location / {
        resolver 8.8.8.8;
        set $bucket "{{ s3settings.bucket }}";
        rewrite ^([^.]*[^/])$ $1/ permanent;

        # matches: branch-name.repository-name
        proxy_pass http://$bucket/${host}${uri};
        
        proxy_intercept_errors on;
        proxy_redirect off;
        proxy_set_header Host $bucket;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
    }


    }
{% endfor %}

