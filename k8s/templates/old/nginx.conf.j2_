#user  nginx;
worker_processes  1;

error_log /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    sendfile        on;

    keepalive_timeout  65;

    include /etc/nginx/conf.d/*.conf;


    server{
      listen 80;
      server_name _;
      return 301 https://$host$request_uri;
    } 

    {% for be in backends %}
    server {
      #listen 8880;
      listen 443 ssl http2;
      server_name       {% for domain in be.domains %} {{domain  }} {% endfor %};

      ssl_certificate /etc/letsencrypt/live/{{be.certname}}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{be.certname}}/privkey.pem;

      keepalive_timeout   70;

      #error_log /var/log/nginx/level0_b.nginx_error.log warn;
      #access_log /var/log/nginx/level0_b.nginx_access.log main;
      error_log stderr;

      location /django-admin/{
          return 302 google.com;
      }
      location /wp-admin/{
          return 302 google.com;
      }
      location /cgi/{
          return 302 google.com;
      }
      
      location /admin/{
          return 302 google.com;
      }

      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;



      location / {
          proxy_pass http://{{be.backend_connector}};
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

{% if be.vpn_only %}
          # block one workstation
          #deny    192.168.1.1;
          # allow anyone in 192.168.1.0/24
          allow   {{vpn_only_ips}};
          # drop rest of the world 
          deny    all;
{%endif%}
      }


    }
{% endfor %}

    {% for s3settings in s3domains %}
    server {
      #listen 8880;
      listen 443 ssl http2;
      server_name       {% for domain in s3settings.domains %} {{domain  }} {% endfor %};
      
{% if s3settings.certname == 'tls' %}
      ssl_certificate /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
{% else %}
      ssl_certificate /etc/letsencrypt/live/{{s3settings.certname}}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{s3settings.certname}}/privkey.pem;
{% endif %}
      keepalive_timeout   70;

      #error_log /var/log/nginx/level0_b.nginx_error.log warn;
      #access_log /var/log/nginx/level0_b.nginx_access.log main;
      error_log stderr;

      location /admin/ {
          return 302 google.com;
      }
      location /django-admin/{
          return 302 google.com;
      }
      location /wp-admin/{
          return 302 google.com;
      }
      location /cgi/{
          return 302 google.com;
      }

      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;



    location / {
        resolver 8.8.8.8;
        set $bucket "{{ s3settings.bucket }}";
        rewrite ^([^.]*[^/])$ $1/ permanent;

        # matches: branch-name.repository-name
        proxy_pass http://$bucket/${host}${uri};
        
        proxy_intercept_errors on;
        proxy_redirect off;
        proxy_set_header Host $bucket;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        }


    }
{% endfor %}

}
